###############################################################################
#
# IAR ANSI C/C++ Compiler V9.50.1.380/W64 for ARM         21/Dec/2023  20:36:37
# Copyright 1999-2023 IAR Systems AB.
#
#    Cpu mode          =  thumb
#    Endian            =  little
#    Source file       =  C:\stm32f107\test\stm32f107\user\src\game_io.c
#    Command line      =
#        -f
#        C:\stm32f107\test\stm32f107\Debug\Obj\src_16443330741552987741.dir\game_io.o.rsp
#        (C:\stm32f107\test\stm32f107\user\src\game_io.c -D
#        USE_STDPERIPH_DRIVER -D STM32F10X_CL -lC
#        C:\stm32f107\test\stm32f107\Debug\List\src_16443330741552987741.dir -o
#        C:\stm32f107\test\stm32f107\Debug\Obj\src_16443330741552987741.dir
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files\IAR
#        Systems\Embedded Workbench 9.2\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\stm32f107\test\stm32f107\Libraries\CMSIS\DeviceSupport\ -I
#        C:\stm32f107\test\stm32f107\Libraries\CMSIS\DeviceSupport\Startup\ -I
#        C:\stm32f107\test\stm32f107\Libraries\STM32F10x_StdPeriph_Driver_v3.5\inc\
#        -I
#        C:\stm32f107\test\stm32f107\Libraries\STM32F10x_StdPeriph_Driver_v3.5\src\
#        -I C:\stm32f107\test\stm32f107\user\ -I
#        C:\stm32f107\test\stm32f107\user\inc\ -I
#        C:\stm32f107\test\stm32f107\Libraries\LCD\ -I
#        C:\stm32f107\test\stm32f107\user\src\ -Ol -I "C:\Program Files\IAR
#        Systems\Embedded Workbench 9.2\arm\CMSIS\Core\Include\\")
#        --dependencies=n
#        C:\stm32f107\test\stm32f107\Debug\Obj\src_16443330741552987741.dir\game_io.o.iar_deps
#    Locale            =  C
#    List file         =
#        C:\stm32f107\test\stm32f107\Debug\List\src_16443330741552987741.dir\game_io.lst
#    Object file       =
#        C:\stm32f107\test\stm32f107\Debug\Obj\src_16443330741552987741.dir\game_io.o
#    Runtime model:       
#      __CPP_Runtime   =  1
#      __SystemLibrary =  DLib
#      __dlib_version  =  6
#
###############################################################################

C:\stm32f107\test\stm32f107\user\src\game_io.c
      1          #include "stm32f10x.h"

   \                                 In section .text, align 4, keep-with-next
   \   static __softfp void __NVIC_EnableIRQ(IRQn_Type)
   \                     __NVIC_EnableIRQ: (+1)
   \        0x0   0x0001             MOVS     R1,R0
   \        0x2   0xB249             SXTB     R1,R1
   \        0x4   0x2900             CMP      R1,#+0
   \        0x6   0xD408             BMI.N    ??__NVIC_EnableIRQ_0
   \        0x8   0x2201             MOVS     R2,#+1
   \        0xA   0xF010 0x011F      ANDS     R1,R0,#0x1F
   \        0xE   0x408A             LSLS     R2,R2,R1
   \       0x10   0x....             LDR.N    R1,??DataTable6
   \       0x12   0xB240             SXTB     R0,R0
   \       0x14   0x0940             LSRS     R0,R0,#+5
   \       0x16   0xF841 0x2020      STR      R2,[R1, R0, LSL #+2]
   \                     ??__NVIC_EnableIRQ_0: (+1)
   \       0x1A   0x4770             BX       LR
      2          #include "stm32f10x_exti.h"
      3          #include "stm32f10x_gpio.h"
      4          #include "stm32f10x_usart.h"
      5          #include "stm32f10x_rcc.h"
      6          #include "misc.h"
      7          
      8          #include "common.h"
      9          #include "common.h"
     10          #include "game_io.h"
     11          

   \                                 In section .bss, align 4
     12          uint16_t io_char[100] = {0, }; // 받아온 값을 저장
   \                     io_char:
   \        0x0                      DS8 200

   \                                 In section .bss, align 4
     13          int io_index = 0;
   \                     io_index:
   \        0x0                      DS8 4
     14          
     15          /* -----------  Configure ---------- */

   \                                 In section .text, align 2, keep-with-next
     16          void io_rcc_Configure(){
   \                     io_rcc_Configure: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
     17              RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);
   \        0x2   0x2101             MOVS     R1,#+1
   \        0x4   0x2004             MOVS     R0,#+4
   \        0x6   0x.... 0x....      BL       RCC_APB2PeriphClockCmd
     18              RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOD, ENABLE);
   \        0xA   0x2101             MOVS     R1,#+1
   \        0xC   0x2020             MOVS     R0,#+32
   \        0xE   0x.... 0x....      BL       RCC_APB2PeriphClockCmd
     19          
     20              RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1, ENABLE);
   \       0x12   0x2101             MOVS     R1,#+1
   \       0x14   0xF44F 0x4080      MOV      R0,#+16384
   \       0x18   0x.... 0x....      BL       RCC_APB2PeriphClockCmd
     21              RCC_APB1PeriphClockCmd(RCC_APB1Periph_USART2, ENABLE);
   \       0x1C   0x2101             MOVS     R1,#+1
   \       0x1E   0xF45F 0x3000      MOVS     R0,#+131072
   \       0x22   0x.... 0x....      BL       RCC_APB1PeriphClockCmd
     22          
     23              RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO, ENABLE);
   \       0x26   0x2101             MOVS     R1,#+1
   \       0x28   0x2001             MOVS     R0,#+1
   \       0x2A   0x.... 0x....      BL       RCC_APB2PeriphClockCmd
     24          }
   \       0x2E   0xBD01             POP      {R0,PC}

   \                                 In section .text, align 2, keep-with-next
     25          void io_gpio_Configure(){
   \                     io_gpio_Configure: (+1)
   \        0x0   0xB51F             PUSH     {R0-R4,LR}
     26              GPIO_InitTypeDef GPIO_InitStructure;
                                      ^
Warning[Pe177]: variable "GPIO_InitStructure" was declared but never referenced
     27          
     28              //TX
     29              GPIO_InitTypeDef USART1_TX;
     30              USART1_TX.GPIO_Pin = GPIO_Pin_9;
   \        0x2   0xF44F 0x7000      MOV      R0,#+512
   \        0x6   0xF8AD 0x000C      STRH     R0,[SP, #+12]
     31              USART1_TX.GPIO_Speed = GPIO_Speed_50MHz;
   \        0xA   0x2003             MOVS     R0,#+3
   \        0xC   0xF88D 0x000E      STRB     R0,[SP, #+14]
     32              USART1_TX.GPIO_Mode = GPIO_Mode_AF_PP;
   \       0x10   0x2018             MOVS     R0,#+24
   \       0x12   0xF88D 0x000F      STRB     R0,[SP, #+15]
     33              GPIO_Init(GPIOA, &USART1_TX);
   \       0x16   0x....             LDR.N    R4,??DataTable6_1
   \       0x18   0xA903             ADD      R1,SP,#+12
   \       0x1A   0x0020             MOVS     R0,R4
   \       0x1C   0x.... 0x....      BL       GPIO_Init
     34          
     35              //RX
     36              GPIO_InitTypeDef USART1_RX;
     37              USART1_RX.GPIO_Pin = GPIO_Pin_10;
   \       0x20   0xF44F 0x6080      MOV      R0,#+1024
   \       0x24   0xF8AD 0x0008      STRH     R0,[SP, #+8]
     38              USART1_RX.GPIO_Speed = GPIO_Speed_50MHz;
   \       0x28   0x2003             MOVS     R0,#+3
   \       0x2A   0xF88D 0x000A      STRB     R0,[SP, #+10]
     39              USART1_RX.GPIO_Mode = GPIO_Mode_IPU;
   \       0x2E   0x2048             MOVS     R0,#+72
   \       0x30   0xF88D 0x000B      STRB     R0,[SP, #+11]
     40              GPIO_Init(GPIOA, &USART1_RX);
   \       0x34   0xA902             ADD      R1,SP,#+8
   \       0x36   0x0020             MOVS     R0,R4
   \       0x38   0x.... 0x....      BL       GPIO_Init
     41          
     42              /* USART2 pin setting */
     43              //TX
     44              GPIO_InitTypeDef USART2_TX;
     45              USART2_TX.GPIO_Pin = GPIO_Pin_2;
   \       0x3C   0x2004             MOVS     R0,#+4
   \       0x3E   0xF8AD 0x0004      STRH     R0,[SP, #+4]
     46              USART2_TX.GPIO_Speed = GPIO_Speed_50MHz;
   \       0x42   0x2003             MOVS     R0,#+3
   \       0x44   0xF88D 0x0006      STRB     R0,[SP, #+6]
     47              USART2_TX.GPIO_Mode = GPIO_Mode_AF_PP;
   \       0x48   0x2018             MOVS     R0,#+24
   \       0x4A   0xF88D 0x0007      STRB     R0,[SP, #+7]
     48              GPIO_Init(GPIOA, &USART2_TX);
   \       0x4E   0xA901             ADD      R1,SP,#+4
   \       0x50   0x0020             MOVS     R0,R4
   \       0x52   0x.... 0x....      BL       GPIO_Init
     49          
     50              //RX
     51              GPIO_InitTypeDef USART2_RX;
     52              USART2_RX.GPIO_Pin = GPIO_Pin_3;
   \       0x56   0x2008             MOVS     R0,#+8
   \       0x58   0xF8AD 0x0000      STRH     R0,[SP, #+0]
     53              USART2_RX.GPIO_Speed = GPIO_Speed_50MHz;
   \       0x5C   0x2003             MOVS     R0,#+3
   \       0x5E   0xF88D 0x0002      STRB     R0,[SP, #+2]
     54              USART2_RX.GPIO_Mode = GPIO_Mode_IPU;
   \       0x62   0x2048             MOVS     R0,#+72
   \       0x64   0xF88D 0x0003      STRB     R0,[SP, #+3]
     55              GPIO_Init(GPIOA, &USART2_RX);
   \       0x68   0x4669             MOV      R1,SP
   \       0x6A   0x0020             MOVS     R0,R4
   \       0x6C   0x.... 0x....      BL       GPIO_Init
     56          }
   \       0x70   0xBD1F             POP      {R0-R4,PC}

   \                                 In section .text, align 2, keep-with-next
     57          void io_USART1_Init(void)
     58          {
   \                     io_USART1_Init: (+1)
   \        0x0   0xB51F             PUSH     {R0-R4,LR}
     59              USART_InitTypeDef USART1_InitStructure;
     60          
     61              USART_Cmd(USART1, ENABLE);
   \        0x2   0x....             LDR.N    R4,??DataTable6_2
   \        0x4   0x2101             MOVS     R1,#+1
   \        0x6   0x0020             MOVS     R0,R4
   \        0x8   0x.... 0x....      BL       USART_Cmd
     62          
     63              USART1_InitStructure.USART_BaudRate = 9600;
   \        0xC   0xF44F 0x5016      MOV      R0,#+9600
   \       0x10   0x9000             STR      R0,[SP, #+0]
     64              USART1_InitStructure.USART_WordLength = USART_WordLength_8b;
   \       0x12   0x2000             MOVS     R0,#+0
   \       0x14   0xF8AD 0x0004      STRH     R0,[SP, #+4]
     65              USART1_InitStructure.USART_StopBits = USART_StopBits_1;
   \       0x18   0x2000             MOVS     R0,#+0
   \       0x1A   0xF8AD 0x0006      STRH     R0,[SP, #+6]
     66              USART1_InitStructure.USART_Parity = USART_Parity_No;
   \       0x1E   0x2000             MOVS     R0,#+0
   \       0x20   0xF8AD 0x0008      STRH     R0,[SP, #+8]
     67              USART1_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
   \       0x24   0x200C             MOVS     R0,#+12
   \       0x26   0xF8AD 0x000A      STRH     R0,[SP, #+10]
     68              USART1_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
   \       0x2A   0x2000             MOVS     R0,#+0
   \       0x2C   0xF8AD 0x000C      STRH     R0,[SP, #+12]
     69              USART_Init(USART1, &USART1_InitStructure);
   \       0x30   0x4669             MOV      R1,SP
   \       0x32   0x0020             MOVS     R0,R4
   \       0x34   0x.... 0x....      BL       USART_Init
     70          
     71              USART_ITConfig(USART1, USART_IT_RXNE, ENABLE);
   \       0x38   0x2201             MOVS     R2,#+1
   \       0x3A   0xF240 0x5125      MOVW     R1,#+1317
   \       0x3E   0x0020             MOVS     R0,R4
   \       0x40   0x.... 0x....      BL       USART_ITConfig
     72          }
   \       0x44   0xBD1F             POP      {R0-R4,PC}

   \                                 In section .text, align 2, keep-with-next
     73          void io_USART2_Init(void)
     74          {
   \                     io_USART2_Init: (+1)
   \        0x0   0xB51F             PUSH     {R0-R4,LR}
     75              USART_InitTypeDef USART2_InitStructure;
     76          
     77              USART_Cmd(USART2, ENABLE);
   \        0x2   0x....             LDR.N    R4,??DataTable6_3
   \        0x4   0x2101             MOVS     R1,#+1
   \        0x6   0x0020             MOVS     R0,R4
   \        0x8   0x.... 0x....      BL       USART_Cmd
     78          
     79              USART2_InitStructure.USART_BaudRate = 9600;
   \        0xC   0xF44F 0x5016      MOV      R0,#+9600
   \       0x10   0x9000             STR      R0,[SP, #+0]
     80              USART2_InitStructure.USART_WordLength = USART_WordLength_8b;
   \       0x12   0x2000             MOVS     R0,#+0
   \       0x14   0xF8AD 0x0004      STRH     R0,[SP, #+4]
     81              USART2_InitStructure.USART_StopBits = USART_StopBits_1;
   \       0x18   0x2000             MOVS     R0,#+0
   \       0x1A   0xF8AD 0x0006      STRH     R0,[SP, #+6]
     82              USART2_InitStructure.USART_Parity = USART_Parity_No;
   \       0x1E   0x2000             MOVS     R0,#+0
   \       0x20   0xF8AD 0x0008      STRH     R0,[SP, #+8]
     83              USART2_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
   \       0x24   0x200C             MOVS     R0,#+12
   \       0x26   0xF8AD 0x000A      STRH     R0,[SP, #+10]
     84              USART2_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
   \       0x2A   0x2000             MOVS     R0,#+0
   \       0x2C   0xF8AD 0x000C      STRH     R0,[SP, #+12]
     85              USART_Init(USART2, &USART2_InitStructure);
   \       0x30   0x4669             MOV      R1,SP
   \       0x32   0x0020             MOVS     R0,R4
   \       0x34   0x.... 0x....      BL       USART_Init
     86          
     87              USART_ITConfig(USART2, USART_IT_RXNE, ENABLE);
   \       0x38   0x2201             MOVS     R2,#+1
   \       0x3A   0xF240 0x5125      MOVW     R1,#+1317
   \       0x3E   0x0020             MOVS     R0,R4
   \       0x40   0x.... 0x....      BL       USART_ITConfig
     88          }
   \       0x44   0xBD1F             POP      {R0-R4,PC}
     89          

   \                                 In section .text, align 2, keep-with-next
     90          void io_NVIC_Configure(void) {
   \                     io_NVIC_Configure: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
     91          
     92              NVIC_InitTypeDef NVIC_InitStructure;
     93          
     94              NVIC_PriorityGroupConfig(NVIC_PriorityGroup_0);
   \        0x2   0xF44F 0x60E0      MOV      R0,#+1792
   \        0x6   0x.... 0x....      BL       NVIC_PriorityGroupConfig
     95          
     96              NVIC_EnableIRQ(USART1_IRQn);
   \        0xA   0x2025             MOVS     R0,#+37
   \        0xC   0x.... 0x....      BL       __NVIC_EnableIRQ
     97              NVIC_InitStructure.NVIC_IRQChannel = USART1_IRQn;
   \       0x10   0x2025             MOVS     R0,#+37
   \       0x12   0xF88D 0x0000      STRB     R0,[SP, #+0]
     98              NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0x1;
   \       0x16   0x2001             MOVS     R0,#+1
   \       0x18   0xF88D 0x0001      STRB     R0,[SP, #+1]
     99              NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0x1;
   \       0x1C   0x2001             MOVS     R0,#+1
   \       0x1E   0xF88D 0x0002      STRB     R0,[SP, #+2]
    100              NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
   \       0x22   0x2001             MOVS     R0,#+1
   \       0x24   0xF88D 0x0003      STRB     R0,[SP, #+3]
    101              NVIC_Init(&NVIC_InitStructure);
   \       0x28   0x4668             MOV      R0,SP
   \       0x2A   0x.... 0x....      BL       NVIC_Init
    102          
    103              // USART2
    104              NVIC_EnableIRQ(USART2_IRQn);
   \       0x2E   0x2026             MOVS     R0,#+38
   \       0x30   0x.... 0x....      BL       __NVIC_EnableIRQ
    105              NVIC_InitStructure.NVIC_IRQChannel = USART2_IRQn;
   \       0x34   0x2026             MOVS     R0,#+38
   \       0x36   0xF88D 0x0000      STRB     R0,[SP, #+0]
    106              NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0x1;
   \       0x3A   0x2001             MOVS     R0,#+1
   \       0x3C   0xF88D 0x0001      STRB     R0,[SP, #+1]
    107              NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0x1;
   \       0x40   0x2001             MOVS     R0,#+1
   \       0x42   0xF88D 0x0002      STRB     R0,[SP, #+2]
    108              NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
   \       0x46   0x2001             MOVS     R0,#+1
   \       0x48   0xF88D 0x0003      STRB     R0,[SP, #+3]
    109              NVIC_Init(&NVIC_InitStructure);
   \       0x4C   0x4668             MOV      R0,SP
   \       0x4E   0x.... 0x....      BL       NVIC_Init
    110          }
   \       0x52   0xBD01             POP      {R0,PC}
    111          

   \                                 In section .text, align 2, keep-with-next
    112          void sendMessage() {
   \                     sendMessage: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
    113              // 게임 종료 후 결과를 핸드폰으로 전송함
    114              for(int i=0; i<player_count; i++){
   \        0x2   0x2400             MOVS     R4,#+0
   \        0x4   0xE004             B.N      ??sendMessage_0
    115                  USART_SendData(USART2, values[i]);
    116                  for(int i=0; i<2000000; i++); // delay
   \                     ??sendMessage_1: (+1)
   \        0x6   0x1C49             ADDS     R1,R1,#+1
   \                     ??sendMessage_2: (+1)
   \        0x8   0x....             LDR.N    R0,??DataTable6_4
   \        0xA   0x4281             CMP      R1,R0
   \        0xC   0xDBFB             BLT.N    ??sendMessage_1
   \        0xE   0x1C64             ADDS     R4,R4,#+1
   \                     ??sendMessage_0: (+1)
   \       0x10   0x....             LDR.N    R0,??DataTable6_5
   \       0x12   0x6800             LDR      R0,[R0, #+0]
   \       0x14   0x4284             CMP      R4,R0
   \       0x16   0xDA09             BGE.N    ??sendMessage_3
   \       0x18   0x....             LDR.N    R0,??DataTable6_6
   \       0x1A   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \       0x1E   0x0001             MOVS     R1,R0
   \       0x20   0xB289             UXTH     R1,R1
   \       0x22   0x....             LDR.N    R0,??DataTable6_3
   \       0x24   0x.... 0x....      BL       USART_SendData
   \       0x28   0x2100             MOVS     R1,#+0
   \       0x2A   0xE7ED             B.N      ??sendMessage_2
    117                  // while((USART2->SR & USART_SR_TC) == 0);
    118              }
    119          
    120              USART_SendData(USART2, 1000);
   \                     ??sendMessage_3: (+1)
   \       0x2C   0xF44F 0x717A      MOV      R1,#+1000
   \       0x30   0x....             LDR.N    R0,??DataTable6_3
   \       0x32   0x.... 0x....      BL       USART_SendData
    121              for(int i=0; i<2000000; i++); // delay
   \       0x36   0x2100             MOVS     R1,#+0
   \       0x38   0xE000             B.N      ??sendMessage_4
   \                     ??sendMessage_5: (+1)
   \       0x3A   0x1C49             ADDS     R1,R1,#+1
   \                     ??sendMessage_4: (+1)
   \       0x3C   0x....             LDR.N    R0,??DataTable6_4
   \       0x3E   0x4281             CMP      R1,R0
   \       0x40   0xDBFB             BLT.N    ??sendMessage_5
    122          }
   \       0x42   0xBD10             POP      {R4,PC}
    123          

   \                                 In section .text, align 2, keep-with-next
    124          void io_receivedDataParsing(){
   \                     io_receivedDataParsing: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0xB0E4             SUB      SP,SP,#+400
   \        0x4   0xF44F 0x71C8      MOV      R1,#+400
   \        0x8   0x2200             MOVS     R2,#+0
   \        0xA   0x4668             MOV      R0,SP
   \        0xC   0x.... 0x....      BL       __aeabi_memset
    125              // numbers = {index(게임 인덱스 - 0~2), people_count(인원 수), goal(목표 점수)}
    126              int numbers[100] = {0, };
    127              int io_count = 0;
   \       0x10   0x2100             MOVS     R1,#+0
    128              int currentNumber = 0;
   \       0x12   0x2300             MOVS     R3,#+0
    129          
    130              for (int i = 0; i < 100; i++) {
   \       0x14   0x2200             MOVS     R2,#+0
   \       0x16   0xE006             B.N      ??io_receivedDataParsing_0
    131                  if (io_char[i] >= '0' && io_char[i] <= '9') {
    132                      currentNumber = currentNumber * 10 + (io_char[i] - '0');
   \                     ??io_receivedDataParsing_1: (+1)
   \       0x18   0x240A             MOVS     R4,#+10
   \       0x1A   0xF830 0x0012      LDRH     R0,[R0, R2, LSL #+1]
   \       0x1E   0xFB04 0x0303      MLA      R3,R4,R3,R0
   \       0x22   0x3B30             SUBS     R3,R3,#+48
    133                  }
   \                     ??io_receivedDataParsing_2: (+1)
   \       0x24   0x1C52             ADDS     R2,R2,#+1
   \                     ??io_receivedDataParsing_0: (+1)
   \       0x26   0x2A64             CMP      R2,#+100
   \       0x28   0xDA10             BGE.N    ??io_receivedDataParsing_3
   \       0x2A   0x....             LDR.N    R0,??DataTable6_7
   \       0x2C   0xF830 0x4012      LDRH     R4,[R0, R2, LSL #+1]
   \       0x30   0x3C30             SUBS     R4,R4,#+48
   \       0x32   0x2C0A             CMP      R4,#+10
   \       0x34   0xD3F0             BCC.N    ??io_receivedDataParsing_1
    134                  else if (io_char[i] == ' ' && io_char >= 0) {
   \       0x36   0xF830 0x0012      LDRH     R0,[R0, R2, LSL #+1]
   \       0x3A   0x2820             CMP      R0,#+32
   \       0x3C   0xD1F2             BNE.N    ??io_receivedDataParsing_2
    135                      numbers[io_count] = currentNumber;
   \       0x3E   0x4668             MOV      R0,SP
   \       0x40   0xF840 0x3021      STR      R3,[R0, R1, LSL #+2]
    136                      io_count++;
   \       0x44   0x1C49             ADDS     R1,R1,#+1
    137                      currentNumber = 0;
   \       0x46   0x2300             MOVS     R3,#+0
    138          
    139                      if (io_count == 3) break;
   \       0x48   0x2903             CMP      R1,#+3
   \       0x4A   0xD1EB             BNE.N    ??io_receivedDataParsing_2
    140                  }
    141              }
    142          
    143              cur_game = numbers[0];
   \                     ??io_receivedDataParsing_3: (+1)
   \       0x4C   0x9900             LDR      R1,[SP, #+0]
   \       0x4E   0x....             LDR.N    R0,??DataTable6_8
   \       0x50   0x6001             STR      R1,[R0, #+0]
    144              player_count = numbers[1];
   \       0x52   0x9901             LDR      R1,[SP, #+4]
   \       0x54   0x....             LDR.N    R0,??DataTable6_5
   \       0x56   0x6001             STR      R1,[R0, #+0]
    145              is_data_received = 2;
   \       0x58   0x2102             MOVS     R1,#+2
   \       0x5A   0x....             LDR.N    R0,??DataTable6_9
   \       0x5C   0x6001             STR      R1,[R0, #+0]
    146          
    147              for(int i=0; i<100; i++) io_char[i] = 0;
   \       0x5E   0x2200             MOVS     R2,#+0
   \       0x60   0xE004             B.N      ??io_receivedDataParsing_4
   \                     ??io_receivedDataParsing_5: (+1)
   \       0x62   0x2000             MOVS     R0,#+0
   \       0x64   0x....             LDR.N    R1,??DataTable6_7
   \       0x66   0xF821 0x0012      STRH     R0,[R1, R2, LSL #+1]
   \       0x6A   0x1C52             ADDS     R2,R2,#+1
   \                     ??io_receivedDataParsing_4: (+1)
   \       0x6C   0x2A64             CMP      R2,#+100
   \       0x6E   0xDBF8             BLT.N    ??io_receivedDataParsing_5
    148          }
   \       0x70   0xB064             ADD      SP,SP,#+400
   \       0x72   0xBD10             POP      {R4,PC}
    149          

   \                                 In section .text, align 2, keep-with-next
    150          void io_USART2_IRQHandler() {
   \                     io_USART2_IRQHandler: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
    151              // 블루투스로부터 데이터 받고 컴퓨터한테 보냄
    152              uint16_t word;
    153              if(USART_GetITStatus(USART2,USART_IT_RXNE)!=RESET){
   \        0x2   0x....             LDR.N    R4,??DataTable6_3
   \        0x4   0xF240 0x5525      MOVW     R5,#+1317
   \        0x8   0x0029             MOVS     R1,R5
   \        0xA   0x0020             MOVS     R0,R4
   \        0xC   0x.... 0x....      BL       USART_GetITStatus
   \       0x10   0x2800             CMP      R0,#+0
   \       0x12   0xD01B             BEQ.N    ??io_USART2_IRQHandler_0
    154                  word = USART_ReceiveData(USART2);
   \       0x14   0x0020             MOVS     R0,R4
   \       0x16   0x.... 0x....      BL       USART_ReceiveData
   \       0x1A   0x0006             MOVS     R6,R0
    155          
    156                  io_char[io_index] = word;
   \       0x1C   0x....             LDR.N    R0,??DataTable6_10
   \       0x1E   0x....             LDR.N    R2,??DataTable6_7
   \       0x20   0x6801             LDR      R1,[R0, #+0]
   \       0x22   0xF822 0x6011      STRH     R6,[R2, R1, LSL #+1]
    157                  io_index++;
   \       0x26   0x6801             LDR      R1,[R0, #+0]
   \       0x28   0x1C49             ADDS     R1,R1,#+1
   \       0x2A   0x6001             STR      R1,[R0, #+0]
    158          
    159                  if (word == 'A') {
   \       0x2C   0x0030             MOVS     R0,R6
   \       0x2E   0xB280             UXTH     R0,R0
   \       0x30   0x2841             CMP      R0,#+65
   \       0x32   0xD102             BNE.N    ??io_USART2_IRQHandler_1
    160                      is_data_received = 1;
   \       0x34   0x2101             MOVS     R1,#+1
   \       0x36   0x....             LDR.N    R0,??DataTable6_9
   \       0x38   0x6001             STR      R1,[R0, #+0]
    161                  }
    162          
    163                  USART_SendData(USART1, word);
   \                     ??io_USART2_IRQHandler_1: (+1)
   \       0x3A   0x0031             MOVS     R1,R6
   \       0x3C   0xB289             UXTH     R1,R1
   \       0x3E   0x....             LDR.N    R0,??DataTable6_2
   \       0x40   0x.... 0x....      BL       USART_SendData
    164                  USART_ClearITPendingBit(USART2,USART_IT_RXNE);
   \       0x44   0x0029             MOVS     R1,R5
   \       0x46   0x0020             MOVS     R0,R4
   \       0x48   0x.... 0x....      BL       USART_ClearITPendingBit
    165              }
    166              // io_char은 현재 {'0', ' ', '1', '2' } 이렇게 저장되어 있기 때문에
    167              // 이를 int형으로 parsing하는 작업이 필요
    168              printf("mymessage: %c \n", word);
                     ^
Warning[Pe223]: function "printf" declared implicitly
   \                     ??io_USART2_IRQHandler_0: (+1)
   \       0x4C   0xB2B6             UXTH     R6,R6
   \       0x4E   0x0031             MOVS     R1,R6
   \       0x50   0x....             LDR.N    R0,??DataTable6_11
   \       0x52   0x.... 0x....      BL       printf
    169              if (is_data_received == 1) {
   \       0x56   0x....             LDR.N    R0,??DataTable6_9
   \       0x58   0x6800             LDR      R0,[R0, #+0]
   \       0x5A   0x2801             CMP      R0,#+1
   \       0x5C   0xD101             BNE.N    ??io_USART2_IRQHandler_2
    170                  io_receivedDataParsing();
   \       0x5E   0x.... 0x....      BL       io_receivedDataParsing
    171              }
    172          }
   \                     ??io_USART2_IRQHandler_2: (+1)
   \       0x62   0xBD70             POP      {R4-R6,PC}
    173          

   \                                 In section .text, align 2, keep-with-next
    174          void io_Configure() {
   \                     io_Configure: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    175              io_rcc_Configure();
   \        0x2   0x.... 0x....      BL       io_rcc_Configure
    176              io_gpio_Configure();
   \        0x6   0x.... 0x....      BL       io_gpio_Configure
    177              io_USART1_Init();
   \        0xA   0x.... 0x....      BL       io_USART1_Init
    178              io_USART2_Init();
   \        0xE   0x.... 0x....      BL       io_USART2_Init
    179              io_NVIC_Configure();
   \       0x12   0x.... 0x....      BL       io_NVIC_Configure
    180          }
   \       0x16   0xBD01             POP      {R0,PC}

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \        0x0   0xE000'E100        DC32     0xe000e100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_1:
   \        0x0   0x4001'0800        DC32     0x40010800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_2:
   \        0x0   0x4001'3800        DC32     0x40013800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_3:
   \        0x0   0x4000'4400        DC32     0x40004400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_4:
   \        0x0   0x001E'8480        DC32     0x1e8480

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_5:
   \        0x0   0x....'....        DC32     player_count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_6:
   \        0x0   0x....'....        DC32     values

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_7:
   \        0x0   0x....'....        DC32     io_char

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_8:
   \        0x0   0x....'....        DC32     cur_game

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_9:
   \        0x0   0x....'....        DC32     is_data_received

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_10:
   \        0x0   0x....'....        DC32     io_index

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_11:
   \        0x0   0x....'....        DC32     ?_0

   \                                 In section .rodata, align 4
   \                     ?_0:
   \        0x0   0x6D 0x79          DC8 "mymessage: %c \012"
   \              0x6D 0x65    
   \              0x73 0x73    
   \              0x61 0x67    
   \              0x65 0x3A    
   \              0x20 0x25    
   \              0x63 0x20    
   \              0x0A 0x00

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   __NVIC_EnableIRQ
       8   io_Configure
         8   -> io_NVIC_Configure
         8   -> io_USART1_Init
         8   -> io_USART2_Init
         8   -> io_gpio_Configure
         8   -> io_rcc_Configure
       8   io_NVIC_Configure
         8   -> NVIC_Init
         8   -> NVIC_PriorityGroupConfig
         8   -> __NVIC_EnableIRQ
      24   io_USART1_Init
        24   -> USART_Cmd
        24   -> USART_ITConfig
        24   -> USART_Init
      16   io_USART2_IRQHandler
        16   -> USART_ClearITPendingBit
        16   -> USART_GetITStatus
        16   -> USART_ReceiveData
        16   -> USART_SendData
        16   -> io_receivedDataParsing
        16   -> printf
      24   io_USART2_Init
        24   -> USART_Cmd
        24   -> USART_ITConfig
        24   -> USART_Init
      24   io_gpio_Configure
        24   -> GPIO_Init
       8   io_rcc_Configure
         8   -> RCC_APB1PeriphClockCmd
         8   -> RCC_APB2PeriphClockCmd
     408   io_receivedDataParsing
       408   -> __aeabi_memset
       8   sendMessage
         8   -> USART_SendData


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable6
       4  ??DataTable6_1
       4  ??DataTable6_10
       4  ??DataTable6_11
       4  ??DataTable6_2
       4  ??DataTable6_3
       4  ??DataTable6_4
       4  ??DataTable6_5
       4  ??DataTable6_6
       4  ??DataTable6_7
       4  ??DataTable6_8
       4  ??DataTable6_9
      16  ?_0
      28  __NVIC_EnableIRQ
      24  io_Configure
      84  io_NVIC_Configure
      70  io_USART1_Init
     100  io_USART2_IRQHandler
      70  io_USART2_Init
     200  io_char
     114  io_gpio_Configure
       4  io_index
      48  io_rcc_Configure
     116  io_receivedDataParsing
      68  sendMessage

 
 204 bytes in section .bss
  16 bytes in section .rodata
 770 bytes in section .text
 
 770 bytes of CODE  memory
  16 bytes of CONST memory
 204 bytes of DATA  memory

Errors: none
Warnings: 2
