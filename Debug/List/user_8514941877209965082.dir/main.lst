###############################################################################
#
# IAR ANSI C/C++ Compiler V9.50.1.380/W64 for ARM         21/Dec/2023  20:16:29
# Copyright 1999-2023 IAR Systems AB.
#
#    Cpu mode          =  thumb
#    Endian            =  little
#    Source file       =  C:\stm32f107\test\stm32f107\user\main.c
#    Command line      =
#        -f
#        C:\stm32f107\test\stm32f107\Debug\Obj\user_8514941877209965082.dir\main.o.rsp
#        (C:\stm32f107\test\stm32f107\user\main.c -D USE_STDPERIPH_DRIVER -D
#        STM32F10X_CL -lC
#        C:\stm32f107\test\stm32f107\Debug\List\user_8514941877209965082.dir -o
#        C:\stm32f107\test\stm32f107\Debug\Obj\user_8514941877209965082.dir
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files\IAR
#        Systems\Embedded Workbench 9.2\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\stm32f107\test\stm32f107\Libraries\CMSIS\DeviceSupport\ -I
#        C:\stm32f107\test\stm32f107\Libraries\CMSIS\DeviceSupport\Startup\ -I
#        C:\stm32f107\test\stm32f107\Libraries\STM32F10x_StdPeriph_Driver_v3.5\inc\
#        -I
#        C:\stm32f107\test\stm32f107\Libraries\STM32F10x_StdPeriph_Driver_v3.5\src\
#        -I C:\stm32f107\test\stm32f107\user\ -I
#        C:\stm32f107\test\stm32f107\user\inc\ -I
#        C:\stm32f107\test\stm32f107\Libraries\LCD\ -I
#        C:\stm32f107\test\stm32f107\user\src\ -Ol -I "C:\Program Files\IAR
#        Systems\Embedded Workbench 9.2\arm\CMSIS\Core\Include\\")
#        --dependencies=n
#        C:\stm32f107\test\stm32f107\Debug\Obj\user_8514941877209965082.dir\main.o.iar_deps
#    Locale            =  C
#    List file         =
#        C:\stm32f107\test\stm32f107\Debug\List\user_8514941877209965082.dir\main.lst
#    Object file       =
#        C:\stm32f107\test\stm32f107\Debug\Obj\user_8514941877209965082.dir\main.o
#    Runtime model:       
#      __CPP_Runtime   =  1
#      __SystemLibrary =  DLib
#      __dlib_version  =  6
#
###############################################################################

C:\stm32f107\test\stm32f107\user\main.c
      1          #include "stm32f10x_adc.h"
      2          #include "stm32f10x_rcc.h"
      3          #include "stm32f10x_gpio.h"
      4          #include "stm32f10x_usart.h"
      5          #include "stm32f10x_tim.h"
      6          #include "stm32f10x_usart.h"
      7          #include "misc.h"
      8          
      9          #include "shake_game.h"
     10          #include "punch_game.h"
     11          #include "time_game.h"
     12          #include "common.h"
     13          #include "game_io.h"
     14          

   \                                 In section .bss, align 4
     15          int values[PLAYER_MAX] = {0, }; // 각 플레이어의 데이터 저장
   \                     values:
   \        0x0                      DS8 400
     16          

   \                                 In section .bss, align 4
     17          int is_data_received = 0;
   \                     is_data_received:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
     18          int cur_game = 0;
   \                     cur_game:
   \        0x0                      DS8 4

   \                                 In section .data, align 4
     19          int player_count = 3;;
   \                     player_count:
   \        0x0   0x0000'0003        DC32 3

   \                                 In section .bss, align 4
     20          int cur_player = 0;
   \                     cur_player:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
     21          int game_state = 0;
   \                     game_state:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
     22          int allTurnEnd = 0;
   \                     allTurnEnd:
   \        0x0                      DS8 4
     23          
     24          
     25          /*
     26            main: flaot value[PLAYER_MAX] = {};
     27            main: 휴대폰이랑 연결
     28            while{
     29              app: 인원선택
     30              app: 게임 선택
     31              app: 목표 선택
     32              app: 보드에 전송(인원, 게임)
     33          
     34              main: 게임 선택, 인원 설정
     35              game_?: 게임 플레이()
     36              game_?: main으로 리턴
     37              main: value데이터 app으로 전송
     38            }    
     39          */
     40          /*
     41            1. 펀치: polling으로 측정해서 max
     42            2. 굴리기: 턴 종료시 거리 측정
     43            3. 시간 맞추기: 터치로 알아서
     44            4. 앱: 알아서
     45            5. main
     46          */
     47          
     48          
     49          // turnEnd button interrupt handler

   \                                 In section .text, align 2, keep-with-next
     50          void EXTI4_IRQHandler(){ turnButton_Handler(); }
   \                     EXTI4_IRQHandler: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
   \        0x2   0x.... 0x....      BL       turnButton_Handler
   \        0x6   0xBD01             POP      {R0,PC}
     51          
     52          // timeGame Interrupt

   \                                 In section .text, align 2, keep-with-next
     53          void EXTI1_IRQHandler(){ timeGame_TouchHandler(); }
   \                     EXTI1_IRQHandler: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
   \        0x2   0x.... 0x....      BL       timeGame_TouchHandler
   \        0x6   0xBD01             POP      {R0,PC}

   \                                 In section .text, align 2, keep-with-next
     54          void TIM2_IRQHandler(){ timeGame_TimerHandler(); }
   \                     TIM2_IRQHandler: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
   \        0x2   0x.... 0x....      BL       timeGame_TimerHandler
   \        0x6   0xBD01             POP      {R0,PC}
     55          
     56          // bluetooth Interrupt

   \                                 In section .text, align 2, keep-with-next
     57          void USART2_IRQHandler(){ io_USART2_IRQHandler();}
   \                     USART2_IRQHandler: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
   \        0x2   0x.... 0x....      BL       io_USART2_IRQHandler
   \        0x6   0xBD01             POP      {R0,PC}
     58          

   \                                 In section .text, align 2, keep-with-next
     59          void Init(){
   \                     Init: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
     60          	SystemInit();
   \        0x2   0x.... 0x....      BL       SystemInit
     61          
     62            	// common configure(게임 플레이와 무관한 설정)
     63            	io_Configure();
   \        0x6   0x.... 0x....      BL       io_Configure
     64          	turnLed_Configure();
   \        0xA   0x.... 0x....      BL       turnLed_Configure
     65          	turnButton_Button_Configure();
   \        0xE   0x.... 0x....      BL       turnButton_Button_Configure
     66            
     67          	// game configure(해당하는 게임별 사용하는 GPIO, EXTI, NVIC, DMA, Timer등을 설정)
     68          	timeGame_Configure();
   \       0x12   0x.... 0x....      BL       timeGame_Configure
     69          	punchGame_Configure();
   \       0x16   0x.... 0x....      BL       punchGame_Configure
     70          	shakeGame_Configure();
   \       0x1A   0x.... 0x....      BL       shakeGame_Configure
     71          }
   \       0x1E   0xBD01             POP      {R0,PC}
     72          

   \                                 In section .text, align 2, keep-with-next
     73          int main(){
   \                     main: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
     74          	Init();
   \        0x2   0x.... 0x....      BL       Init
   \        0x6   0xE004             B.N      ??main_0
     75          
     76          	while(1){
     77          		// bluetooth로 부터 받아올 데이터 초기화
     78          		cur_game  = 0;
     79          		is_data_received = 0;
     80          		player_count = 0;
     81              
     82          		while(is_data_received != 2);  // 게임 데이터를 받아올 때까지 대기
     83                  printf("data received %d %d \n", player_count, cur_game);
                         ^
Warning[Pe223]: function "printf" declared implicitly
     84                  
     85          		// 게임 데이터 초기화
     86          		allTurnEnd = 0;
     87          		cur_player = 0;
     88          		game_state = 0;
     89          		switch(cur_game){
     90          			case 0: shakeGame(); break;
     91          			case 1: punchGame(); break;
     92          			case 2: timeGame();	 break;
     93          			default: 			 break;
   \                     ??main_1: (+1)
   \        0x8   0xE001             B.N      ??main_2
   \                     ??main_3: (+1)
   \        0xA   0x.... 0x....      BL       timeGame
     94          		}
     95          		sendMessage();  // 게임 결과를 앱으로 전송
   \                     ??main_2: (+1)
   \        0xE   0x.... 0x....      BL       sendMessage
   \                     ??main_0: (+1)
   \       0x12   0x....             LDR.N    R4,??DataTable1
   \       0x14   0x2000             MOVS     R0,#+0
   \       0x16   0x6020             STR      R0,[R4, #+0]
   \       0x18   0x....             LDR.N    R1,??DataTable1_1
   \       0x1A   0x2000             MOVS     R0,#+0
   \       0x1C   0x6008             STR      R0,[R1, #+0]
   \       0x1E   0x....             LDR.N    R0,??DataTable1_2
   \       0x20   0x2200             MOVS     R2,#+0
   \       0x22   0x6002             STR      R2,[R0, #+0]
   \                     ??main_4: (+1)
   \       0x24   0x680A             LDR      R2,[R1, #+0]
   \       0x26   0x2A02             CMP      R2,#+2
   \       0x28   0xD1FC             BNE.N    ??main_4
   \       0x2A   0x6822             LDR      R2,[R4, #+0]
   \       0x2C   0x6801             LDR      R1,[R0, #+0]
   \       0x2E   0x....             LDR.N    R0,??DataTable1_3
   \       0x30   0x.... 0x....      BL       printf
   \       0x34   0x2100             MOVS     R1,#+0
   \       0x36   0x....             LDR.N    R0,??DataTable1_4
   \       0x38   0x6001             STR      R1,[R0, #+0]
   \       0x3A   0x2100             MOVS     R1,#+0
   \       0x3C   0x....             LDR.N    R0,??DataTable1_5
   \       0x3E   0x6001             STR      R1,[R0, #+0]
   \       0x40   0x2100             MOVS     R1,#+0
   \       0x42   0x....             LDR.N    R0,??DataTable1_6
   \       0x44   0x6001             STR      R1,[R0, #+0]
   \       0x46   0x6820             LDR      R0,[R4, #+0]
   \       0x48   0x2800             CMP      R0,#+0
   \       0x4A   0xD003             BEQ.N    ??main_5
   \       0x4C   0x2802             CMP      R0,#+2
   \       0x4E   0xD0DC             BEQ.N    ??main_3
   \       0x50   0xD303             BCC.N    ??main_6
   \       0x52   0xE7D9             B.N      ??main_1
   \                     ??main_5: (+1)
   \       0x54   0x.... 0x....      BL       shakeGame
   \       0x58   0xE7D9             B.N      ??main_2
   \                     ??main_6: (+1)
   \       0x5A   0x.... 0x....      BL       punchGame
   \       0x5E   0xE7D6             B.N      ??main_2
     96          	}
     97          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \        0x0   0x....'....        DC32     cur_game

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \        0x0   0x....'....        DC32     is_data_received

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \        0x0   0x....'....        DC32     player_count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \        0x0   0x....'....        DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \        0x0   0x....'....        DC32     allTurnEnd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \        0x0   0x....'....        DC32     cur_player

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_6:
   \        0x0   0x....'....        DC32     game_state

   \                                 In section .rodata, align 4
   \                     ?_0:
   \        0x0   0x64 0x61          DC8 "data received %d %d \012"
   \              0x74 0x61    
   \              0x20 0x72    
   \              0x65 0x63    
   \              0x65 0x69    
   \              0x76 0x65    
   \              0x64 0x20    
   \              0x25 0x64    
   \              0x20 0x25    
   \              0x64 0x20    
   \              0x0A 0x00
   \       0x16                      DS8 2

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   EXTI1_IRQHandler
         8   -> timeGame_TouchHandler
       8   EXTI4_IRQHandler
         8   -> turnButton_Handler
       8   Init
         8   -> SystemInit
         8   -> io_Configure
         8   -> punchGame_Configure
         8   -> shakeGame_Configure
         8   -> timeGame_Configure
         8   -> turnButton_Button_Configure
         8   -> turnLed_Configure
       8   TIM2_IRQHandler
         8   -> timeGame_TimerHandler
       8   USART2_IRQHandler
         8   -> io_USART2_IRQHandler
       8   main
         8   -> Init
         8   -> printf
         8   -> punchGame
         8   -> sendMessage
         8   -> shakeGame
         8   -> timeGame


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
      24  ?_0
       8  EXTI1_IRQHandler
       8  EXTI4_IRQHandler
      32  Init
       8  TIM2_IRQHandler
       8  USART2_IRQHandler
       4  allTurnEnd
       4  cur_game
       4  cur_player
       4  game_state
       4  is_data_received
      96  main
       4  player_count
     400  values

 
 420 bytes in section .bss
   4 bytes in section .data
  24 bytes in section .rodata
 188 bytes in section .text
 
 188 bytes of CODE  memory
  24 bytes of CONST memory
 424 bytes of DATA  memory

Errors: none
Warnings: 1
